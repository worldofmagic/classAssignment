


	Terms for describing people
	
	
	
	
	
		
	
	

*****************************************************************
 * ReSpec CSS
 * Robin Berjon robin at berjon dot com
 * v0.05 - 2009-07-31
 *****************************************************************
* --- INLINES --- *
em.rfc2119 { 
    text-transform:     lowercase;
    font-variant:       small-caps;
    font-style:         normal;
    color:              #900;
}
h1 acronym, h2 acronym, h3 acronym, h4 acronym, h5 acronym, h6 acronym, a acronym,
h1 abbr, h2 abbr, h3 abbr, h4 abbr, h5 abbr, h6 abbr, a abbr {
    border: none;
}
dfn {
    font-weight:    bold;
}
a.internalDFN {
    color:  inherit;
    border-bottom:  1px solid #99c;
    text-decoration:    none;
}
a.externalDFN {
    color:  inherit;
    border-bottom:  1px dotted #ccc;
    text-decoration:    none;
}
a.bibref {
    text-decoration:    none;
}
code {
    color:  #ff4500;
}
* --- WEB IDL --- *
pre.idl {
    border-top: 1px solid #90b8de;
    border-bottom: 1px solid #90b8de;
    padding:    1em;
    line-height:    120%;
}
pre.idl::before {
    content:    "WebIDL";
    display:    block;
    width:      150px;
    background: #90b8de;
    color:  #fff;
    font-family:    initial;
    padding:    3px;
    font-weight:    bold;
    margin: -1em 0 1em -1em;
}
.idlType {
    color:  #ff4500;
    font-weight:    bold;
    text-decoration:    none;
}
*.idlModule*
*.idlModuleID*
*.idlInterface*
.idlInterfaceID, .idlDictionaryID {
    font-weight:    bold;
    color:  #005a9c;
}
.idlSuperclass {
    font-style: italic;
    color:  #005a9c;
}
*.idlAttribute*
.idlAttrType, .idlFieldType, .idlMemberType {
    color:  #005a9c;
}
.idlAttrName, .idlFieldName, .idlMemberName {
    color:  #ff4500;
}
.idlAttrName a, .idlFieldName a, .idlMemberName a {
    color:  #ff4500;
    border-bottom:  1px dotted #ff4500;
    text-decoration: none;
}
*.idlMethod*
.idlMethType {
    color:  #005a9c;
}
.idlMethName {
    color:  #ff4500;
}
.idlMethName a {
    color:  #ff4500;
    border-bottom:  1px dotted #ff4500;
    text-decoration: none;
}
*.idlParam*
.idlParamType {
    color:  #005a9c;
}
.idlParamName {
    font-style: italic;
}
.extAttr {
    color:  #666;
}
*.idlConst*
.idlConstType {
    color:  #005a9c;
}
.idlConstName {
    color:  #ff4500;
}
.idlConstName a {
    color:  #ff4500;
    border-bottom:  1px dotted #ff4500;
    text-decoration: none;
}
*.idlException*
.idlExceptionID {
    font-weight:    bold;
    color:  #c00;
}
.idlTypedefID, .idlTypedefType {
    color:  #005a9c;
}
.idlRaises, .idlRaises a.idlType, .idlRaises a.idlType code, .excName a, .excName a code {
    color:  #c00;
    font-weight:    normal;
}
.excName a {
    font-family:    monospace;
}
.idlRaises a.idlType, .excName a.idlType {
    border-bottom:  1px dotted #c00;
}
.excGetSetTrue, .excGetSetFalse, .prmNullTrue, .prmNullFalse, .prmOptTrue, .prmOptFalse {
    width:  45px;
    text-align: center;
}
.excGetSetTrue, .prmNullTrue, .prmOptTrue { color:  #0c0; }
.excGetSetFalse, .prmNullFalse, .prmOptFalse { color:  #c00; }
.idlImplements a {
    font-weight:    bold;
}
dl.attributes, dl.methods, dl.constants, dl.fields, dl.dictionary-members {
    margin-left:    2em;
}
.attributes dt, .methods dt, .constants dt, .fields dt, .dictionary-members dt {
    font-weight:    normal;
}
.attributes dt code, .methods dt code, .constants dt code, .fields dt code, .dictionary-members dt code {
    font-weight:    bold;
    color:  #000;
    font-family:    monospace;
}
.attributes dt code, .fields dt code, .dictionary-members dt code {
    background:  #ffffd2;
}
.attributes dt .idlAttrType code, .fields dt .idlFieldType code, .dictionary-members dt .idlMemberType code {
    color:  #005a9c;
    background:  transparent;
    font-family:    inherit;
    font-weight:    normal;
    font-style: italic;
}
.methods dt code {
    background:  #d9e6f8;
}
.constants dt code {
    background:  #ddffd2;
}
.attributes dd, .methods dd, .constants dd, .fields dd, .dictionary-members dd {
    margin-bottom:  1em;
}
table.parameters, table.exceptions {
    border-spacing: 0;
    border-collapse:    collapse;
    margin: 0.5em 0;
    width:  100%;
}
table.parameters { border-bottom:  1px solid #90b8de; }
table.exceptions { border-bottom:  1px solid #deb890; }
.parameters th, .exceptions th {
    color:  #fff;
    padding:    3px 5px;
    text-align: left;
    font-family:    initial;
    font-weight:    normal;
    text-shadow:    #666 1px 1px 0;
}
.parameters th { background: #90b8de; }
.exceptions th { background: #deb890; }
.parameters td, .exceptions td {
    padding:    3px 10px;
    border-top: 1px solid #ddd;
    vertical-align: top;
}
.parameters tr:first-child td, .exceptions tr:first-child td {
    border-top: none;
}
.parameters td.prmName, .exceptions td.excName, .exceptions td.excCodeName {
    width:  100px;
}
.parameters td.prmType {
    width:  120px;
}
table.exceptions table {
    border-spacing: 0;
    border-collapse:    collapse;
    width:  100%;
}
* --- TOC --- *
.toc a {
    text-decoration:    none;
}
a .secno {
    color:  #000;
}
* --- TABLE --- *
table.simple {
    border-spacing: 0;
    border-collapse:    collapse;
    border-bottom:  3px solid #005a9c;
}
.simple th {
    background: #005a9c;
    color:  #fff;
    padding:    3px 5px;
    text-align: left;
}
.simple th[scope="row"] {
    background: inherit;
    color:  inherit;
    border-top: 1px solid #ddd;
}
.simple td {
    padding:    3px 10px;
    border-top: 1px solid #ddd;
}
.simple tr:nth-childeven {
    background: #f0f6ff;
}
* --- DL --- *
.section dd  p:first-child {
    margin-top: 0;
}
.section dd  p:last-child {
    margin-bottom: 0;
}
.section dd {
    margin-bottom:  1em;
}
.section dl.attrs dd, .section dl.eldef dd {
    margin-bottom:  0;
}
* --- EXAMPLES --- *
pre.example {
    border-top: 1px solid #ff4500;
    border-bottom: 1px solid #ff4500;
    padding:    1em;
    margin-top: 1em;
}
pre.example::before {
    content:    "Example";
    display:    block;
    width:      150px;
    background: #ff4500;
    color:  #fff;
    font-family:    initial;
    padding:    3px;
    font-weight:    bold;
    margin: -1em 0 1em -1em;
}
* --- EDITORIAL NOTES --- *
.issue {
    padding:    1em;
    margin: 1em 0em 0em;
    border: 1px solid #f00;
    background: #ffc;
}
.issue::before {
    content:    "Issue";
    display:    block;
    width:  150px;
    margin: -1.5em 0 0.5em 0;
    font-weight:    bold;
    border: 1px solid #f00;
    background: #fff;
    padding:    3px 1em;
}
.note {
    margin: 1em 0em 0em;
    padding:    1em;
    border: 2px solid #cff6d9;
    background: #e2fff0;
}
.note::before {
    content:    "Note";
    display:    block;
    width:  150px;
    margin: -1.5em 0 0.5em 0;
    font-weight:    bold;
    border: 1px solid #cff6d9;
    background: #fff;
    padding:    3px 1em;
}
* --- Best Practices --- *
div.practice {
    border: solid #bebebe 1px;
    margin: 2em 1em 1em 2em;
}
span.practicelab {
    margin: 1.5em 0.5em 1em 1em;
    font-weight: bold;
    font-style: italic;
}
span.practicelab   { background: #dfffff; }
span.practicelab {
    position: relative;
    padding: 0 0.5em;
    top: -1.5em;
}
p.practicedesc {
    margin: 1.5em 0.5em 1em 1em;
}
@media screen {
    p.practicedesc {
        position: relative;
        top: -2em;
        padding: 0;
        margin: 1.5em 0.5em -1em 1em;
    }
}
* --- SYNTAX HIGHLIGHTING --- *
pre.sh_sourceCode {
  background-color: white;
  color: black;
  font-style: normal;
  font-weight: normal;
}
pre.sh_sourceCode .sh_keyword { color: #005a9c; font-weight: bold; }           * language keywords *
pre.sh_sourceCode .sh_type { color: #666; }                            * basic types *
pre.sh_sourceCode .sh_usertype { color: teal; }                             * user defined types *
pre.sh_sourceCode .sh_string { color: red; font-family: monospace; }        * strings and chars *
pre.sh_sourceCode .sh_regexp { color: orange; font-family: monospace; }     * regular expressions *
pre.sh_sourceCode .sh_specialchar { color: 	#ffc0cb; font-family: monospace; }  * e.g., \n, \t, \\ *
pre.sh_sourceCode .sh_comment { color: #A52A2A; font-style: italic; }         * comments *
pre.sh_sourceCode .sh_number { color: purple; }                             * literal numbers *
pre.sh_sourceCode .sh_preproc { color: #00008B; font-weight: bold; }       * e.g., #include, import *
pre.sh_sourceCode .sh_symbol { color: blue; }                            * e.g., *, + *
pre.sh_sourceCode .sh_function { color: black; font-weight: bold; }         * function calls and declarations *
pre.sh_sourceCode .sh_cbracket { color: red; }                              * block brackets e.g., {, } *
pre.sh_sourceCode .sh_todo { font-weight: bold; background-color: #00FFFF; }   * TODO and FIXME *
* Predefined variables and functions for instance glsl *
pre.sh_sourceCode .sh_predef_var { color: #00008B; }
pre.sh_sourceCode .sh_predef_func { color: #00008B; font-weight: bold; }
* for OOP *
pre.sh_sourceCode .sh_classname { color: teal; }
* line numbers not yet implemented *
pre.sh_sourceCode .sh_linenum { display: none; }
* Internet related *
pre.sh_sourceCode .sh_url { color: blue; text-decoration: underline; font-family: monospace; }
* for ChangeLog and Log files *
pre.sh_sourceCode .sh_date { color: blue; font-weight: bold; }
pre.sh_sourceCode .sh_time, pre.sh_sourceCode .sh_file { color: #00008B; font-weight: bold; }
pre.sh_sourceCode .sh_ip, pre.sh_sourceCode .sh_name { color: #006400; }
* for Prolog, Perl... *
pre.sh_sourceCode .sh_variable { color: #006400; }
* for LaTeX *
pre.sh_sourceCode .sh_italics { color: #006400; font-style: italic; }
pre.sh_sourceCode .sh_bold { color: #006400; font-weight: bold; }
pre.sh_sourceCode .sh_underline { color: #006400; text-decoration: underline; }
pre.sh_sourceCode .sh_fixed { color: green; font-family: monospace; }
pre.sh_sourceCode .sh_argument { color: #006400; }
pre.sh_sourceCode .sh_optionalargument { color: purple; }
pre.sh_sourceCode .sh_math { color: orange; }
pre.sh_sourceCode .sh_bibtex { color: blue; }
* for diffs *
pre.sh_sourceCode .sh_oldfile { color: orange; }
pre.sh_sourceCode .sh_newfile { color: #006400; }
pre.sh_sourceCode .sh_difflines { color: blue; }
* for css *
pre.sh_sourceCode .sh_selector { color: purple; }
pre.sh_sourceCode .sh_property { color: blue; }
pre.sh_sourceCode .sh_value { color: #006400; font-style: italic; }
* other *
pre.sh_sourceCode .sh_section { color: black; font-weight: bold; }
pre.sh_sourceCode .sh_paren { color: red; }
pre.sh_sourceCode .sh_attribute { color: #006400; }

Terms for describing peopleW3C Working Draft 05 April 2012This version:http:www.w3.orgTR2012WD-vocab-people-20120405Latest published version:http:www.w3.orgTRvocab-peopleLatest editor's draft:https:dvcs.w3.orghggldraw-filedefaultpeopleindex.htmlEditor:Michael Hausenblas, DERI
Copyright © 2012 W3C® MIT, ERCIM, Keio, All Rights Reserved. W3C liability, trademark and document use rules apply.
Abstract

This document defines a set of terms for describing people. It defines how to describe people's characteristics such as names or addresses and how to relate people to other things, for example to organizations or projects. For each term, guidance on the usage within a running example is provided. This document also defines mappings to widely used vocabularies to enable interoperability.

Status of This DocumentThis section describes the status of this document at the time of its publication. Other documents may supersede this document. A list of current W3C publications and the latest revision of this technical report can be found in the W3C technical reports index at http:www.w3.orgTR.
  This document is work in progress. You might also want to check the accompanying Wiki page of the GLD Working Group for ongoing discussions.
This document was published by the Government Linked Data GLD Working Group as a First Public Working Draft. This document is intended to become a W3C Recommendation. If you wish to make comments regarding this document, please send them to public-gld-comments@w3.org subscribe, archives. All feedback is welcome.Publication as a Working Draft does not imply endorsement by the W3C Membership. This is a draft document and may be updated, replaced or obsoleted by other documents at any time. It is inappropriate to cite this document as other than work in progress.This document was produced by a group operating under the 5 February 2004 W3C Patent Policy. W3C maintains a public list of any patent disclosures made in connection with the deliverables of the group; that page also includes instructions for disclosing a patent. An individual who has actual knowledge of a patent which the individual believes contains Essential Claims must disclose the information in accordance with section 6 of the W3C Patent Policy.Table of Contents1. Introduction1.1 Terminology1.2 Conventions1.3 Walkthrough example2. Use Cases and requirements2.1 UC1 — Finding a politician2.2 UC2 — Provide spending of local authority2.3 UC3 — Public tenders2.4 UC4 — Awarded bids2.5 UC5 — Budget positions and salaries2.6 UC6 — Lobbying activity2.7 UC7 — Question time archive2.8 Requirements3. What is a person?4. Relating a person to other entities4.1 Relating a person to a contact information4.2 Relating a person to another person4.3 Relating a person to an organization4.4 Relating a person to a building or room4.5 Relating a person to a project4.6 Relating a person to online posts5. Terms6. Interoperability considerations6.1 Mapping to ISA Core Person Vocabulary6.2 Mapping to Schema.org6.3 Mapping to Personal Information Model PIMOA. AcknowledgmentsB. ReferencesB.1 Normative referencesB.2 Informative references

Scope

This document is aimed at both publishers and consumers of Linked Data. We assume that the reader has a certain familiarity with RDF and RDF Schema as well as well-known vocabularies, such as FOAF or Dublin Core. The goal of the document is to specify an interoperable way to describe people and their relationships to other entities such as organisations or projects.



1. IntroductionThis section is non-normative.

1.1 Terminology

	source data
	Data from datastores such as RDBs or spreadsheets that acts as a source for the Linked Data publishing process.
	publisher
	A person or organization that exposes source data as Linked Data on the Web.
	consumer
	A person or agent that uses Linked Data from the Web.

@@TODO: point out definition of source data in the BP document for further details.


1.2 Conventions
The key words must, must not, required, should, should not, recommended, may, and optional in this specification are to be interpreted as described in RFC 2119 [RFC2119].
Examples of RDF serialisations in this document are written in the Turtle [TURTLE] syntax; we assume the following namespace prefix bindings unless otherwise stated:

	
		PrefixIRI
	
	
		rdf:http:www.w3.org19990222-rdf-syntax-ns#
		rdfs:http:www.w3.org200001rdf-schema#
		dct:http:purl.orgdcterms
		xsd:http:www.w3.org2001XMLSchema#
	



1.3 Walkthrough example
In many cases, source data contains data about people and other, related entities. We will use the following text as an example throughout the document to demonstrate the usage of terms:
Jane Doe is CEO of ColCids Inc., headquartered in 2242 Old Middlefield Way, Mountain View, CA, United States.
Recently, ColCids won a contract for providing an Open Data platform, awarded by the Santa Clara County. The
project, called OpenData4SantaClara, starts on 1 Feb 2013 and runs initially for three months. Jane's contact
point in the County of Santa Clara is Björk Guðmundsdóttir. To ensure a successful project delivery, Jane has
invited 東海林賢蔵, a business contact and Open Data guru she recently met at a local event, to brief her and 
the CoolCids team on the challenges and requirements in the domain.
Note: if you're not familiar with people's names throughout the world, you might want to read the personal names around the world article provided by the W3C Internationalization I18n Activity.
A visual representation of the walkthrough example as a graph big version.



2. Use Cases and requirementsThis section is non-normative.
@@TODO: describe real world use cases and derive requirements common to all to decide what is and what is not in scope re target entities.


2.1 UC1 — Finding a politician

Scenario
	A publisher wants to provide contact details for politicians, responsible for a certain region andor topic.
	Real-world example: WriteToThem.


Requirements	
	
		Contact details of politician, incl. name, address, email, phone number, fax number
		Area of responsibility
		Office location
		Membership in a body such as parliament, etc.
	




2.2 UC2 — Provide spending of local authority

Scenario
	A publisher wants to provide an overview of how a local authority, such as a County Council, spends its money.
	Real-world example: Councillors Allowances and Expenses 2010, Fingal County Council, Ireland.


Requirements	
	
		Contact details of politician, incl. name, address, email, phone number, fax number
		Membership in a body such as parliament, etc.
		Expense, incl. type, event, amount 
	




2.3 UC3 — Public tenders

Scenario
	A publisher wants to provide access to public tenders for transparency or accountability applications.
	Real-world example: Tenders Electronic Daily by the European Union and it's Linked Open Data version.


Requirements	
	
		Contact details of contracting authority
		Object of the contract
		Contract duration and conditions
	




2.4 UC4 — Awarded bids

Scenario
	A publisher wants to provide a listing of awarded bids.
	Real-world example: Awarded Bids, Alabama Department of Finance, USA.


Requirements
	
		Contact details of contracting authority and buyer
		Object of the contract
		Action date
	




2.5 UC5 — Budget positions and salaries

Scenario
	A publisher wants to inform about the budget positions along with salaries.
	Real-world example: Budget - Positions and Salaries in 2011 Appropriation Ordinance, City of Chicago, USA.


Requirements
	
		Department codes and details such as area of responsibility
		Position, incl. title, assigned budget type, etc.
		Amount
	




2.6 UC6 — Lobbying activity

Scenario
	A publisher wants to disclose lobbying activities.
	Real-world example: Lobbying Activity,  State of California, USA.


Requirements
	
		Contact details of individual lobbyists
		Lobbyist relationships to companies, such as membership in a body, etc.
	




2.7 UC7 — Question time archive

Scenario
	A publisher wants to provide an archive of online question times for a certain topic andor politician.
	Real-world example: #AskNeelie by Neelie Kroes, Vice President of the European Commission, Europe.


Requirements
	
		Online handle of person who answers and people who ask questions
		Topics via hashtags or indirect via question
		Sequence of questions and answers such as follow-ups, etc.
	



2.8 Requirements

	
		RequirementUC1UC2UC3UC4UC5UC6UC7
	
	
		Contact details••••••
		Area of responsibility••
		Location••
		Membership in body•••
		Expense or budget type••
		Events•••••
		Amount••••
		Object of contract••
		Online handle•
		Conversation topic•
	

@@TODO: describe how we determine which requirements are common to all UC: for example, we could say that a requirement must at least show up in half of the UC, etc.



3. What is a person?
The core concept we are dealing with in this document is that of a person. A person in the context of this specification is defined as an entity of type foaf:Person.
If only the person's name is known foaf:name must be used.
http:data.sccgov.orgpeoplebjörkg rdf:type foaf:Person ;
                                       foaf:name "Björk Guðmundsdóttir" .
How to provide further details about a person, such as an address, is specified in section relating a person to a contact information.

	Best Practice 1: Deriving domain-specific person types
	One sometimes finds specialisations of a person in a domain, for example, in the legal domain there is a distinction made between a natural person and a legal person. In such a case the publisher should, in addition to the domain-specific type e.g., legal:NaturalPerson explicitly set the type foaf:Person in order to increase interoperability. This also allow systems that do not perform reasoning, for example, plain SPARQL processors to benefit from it. Read more ...



4. Relating a person to other entities
Beyond stating the basic characteristics of a person one can relate a person to a target entity such as an organisation or project. The following sections normatively specify how to do this. For any target entity type not listed in the below sections the publisher is free to use any appropriate vocabulary. See also the @@link vocabulary selection section of the Best Practices for Publishing Linked Data document for guidance on how to find and select such a vocabulary.
ISSUE-18

4.1 Relating a person to a contact information
In order to relate a person to a contact information, such as typically found on a business card:

	the contact information must be represented using vCard, and ISSUE-22
	
	the link type used between a person and a contact information must be gldp:card. ISSUE-24

@prefix gldp: http:www.w3.orgnspeople# .
@prefix : http:colcids.comperson .
	
:42 a foaf:Person ;
    gldp:card :42#bc .
:42#bc a v:VCard ;
       v:fn "Jane Doe" ;
       ...


4.2 Relating a person to another person
In order to relate a person to another person one must use the FOAF Vocabulary Specification:

	To state that one person knows another person, foaf:knows must be used.
	To state other relationships between people, the RELATIONSHIP vocabulary should be used.

http:colcids.comperson42 foaf:knows http:opendataguru.netme .

	Best Practice 2: Trusting people's relationships
	A foaf:knows only establishes an unidirectional claim that someone knows someone else. The relation should only be considered to be of a mutual nature if the other person sets a foaf:knows relation as well. Read more ...



4.3 Relating a person to an organization
In order to relate a person to an organization one must use the Organization Ontology.
http:colcids.comcompany a org:FormalOrganization .
http:colcids.comperson42 a foaf:Person .
_:bn123 a org:Membership ;
        org:organization http:colcids.comcompany ;
        org:member http:colcids.comperson42 .
ISSUE-19


4.4 Relating a person to a building or room
In order to relate a person to a building or room one must use the Buildings and Rooms Vocabulary.
To state that a person is located in a building or room rooms:occupant must be used.
@prefix rooms: http:vocab.deri.ierooms# .
@prefix :  .
http:colcids.comperson42 a foaf:Person .
:CCHQ a rooms:Building ;
      rooms:contains :r101 .
:r101 a rooms:Room ;
      rooms:occupant http:colcids.comperson42 .
ISSUE-23


4.5 Relating a person to a project
In order to relate a person to a project one must use the FOAF Vocabulary Specification.
@prefix gldp: http:www.w3.orgnspeople# .
@prefix xsd: http:www.w3.org2001XMLSchema# .
@prefix :  http:data.sccgov.orgproject .
http:data.sccgov.orgpeoplebjörkg a foaf:Person .
:OpenData4SantaClara a foaf:Project ;
                     gldp:title "OpenData4SantaClara" ;
                     rdfs:label "OpenData4SantaClara" ;
                     gldp:lead http:data.sccgov.orgpeoplebjörkg ;
                     gldp:starts "2013-02-01T00:00:00Z"^^xsd:dateTime ;
                     gldp:ends "2013-05-01T00:00:00Z"^^xsd:dateTime .

	Best Practice 3: Multiple label properties
	In order to enable generic Linked Data browsers, such as Tabulator, which typically hard-code well-known label terms to display human readable labels rather than URIs, one should repeat the content of the gldp:title's literal object in an  rdfs:label literal object.

ISSUE-20


4.6 Relating a person to online posts
In order to relate a person to online posts such as blog posts, mailing list posts, etc, one must use the SIOC Core Ontology Specification.
@prefix sioc: http:rdfs.orgsiocns# .
http:blog.colcids.com20121201launching-opendata4santaclara a sioc:Post ;
                                                                    dct:title "OpenData4SantaClara will launch in early 2013" ;
                                                                    dct:created "2012-12-01T17:25:30Z" ;
                                                                    sioc:has_creator http:colcids.comperson42 .
http:colcids.comperson42 a sioc:User .



5. Terms
This section defines terms that allow to relate a person to other entities, such as contact information, etc. The terms below are defined in the namespace URI http:www.w3.orgnspeople# and the preferred namespace prefix for the namespace URI is gldp.
An implementer of this spec must support the following terms:

	
		TermDefinition
	
	
		gldp:cardRelates a foaf:Person to a v:VCard; read: a person has a business card.
		gldp:endsSpecifies the end date of a foaf:Project as an xsd:dateTime [XMLSCHEMA2]; read: a project ends on date.
		gldp:leadRelates a foaf:Project to a foaf:Person; read: a project has a project lead.
		gldp:startsSpecifies the start date of a foaf:Project as an xsd:dateTime [XMLSCHEMA2]; read: a project starts on date.
		gldp:titleSpecifies the title of a foaf:Project as an xsd:string [XMLSCHEMA2]; read: a projects has a title.
		
	



6. Interoperability considerations
Our concept of a person is based on foaf:Person, but there are many more conceptualisations in use, for example as defined by the Interoperability Solutions for European Public Administrations ISA project, the Schema.org project by the search engine providers Bing, Google, Yahoo! or as found in the Personal Information Model PIMO by the Semantic Desktop project.
To enable interoperability and, in general, to make the data more useful, we define mappings of terms, in the following. An implementer of this spec should support these mappings. 
ISSUE-21

6.1 Mapping to ISA Core Person Vocabulary
@@TODO: evaluate ISA Core Person Vocabulary and identify how and what to map.


6.2 Mapping to Schema.org
@@TODO: evaluate schema:Person and identify how and what to map.


6.3 Mapping to Personal Information Model PIMO
@@TODO: evaluate pimo:Person and identify how and what to map.



A. Acknowledgments

The Editor would like to thank the following people for their input and directions: Phil, Renato, George, Sandro, Richard.


B. ReferencesB.1 Normative references[RFC2119]S. Bradner. Key words for use in RFCs to Indicate Requirement Levels. March 1997. Internet RFC 2119.  URL: http:www.ietf.orgrfcrfc2119.txt 
[XMLSCHEMA2]W3C XML Schema Definition Language XSD 1.1 Part 2: Datatypes David Peterson; et al. W3C Proposed Recommendation 19 January 2012. URL: http:www.w3.orgTRxmlschema11-2 
B.2 Informative references[TURTLE]Turtle - Terse RDF Triple Language D. Beckett and T. Berners-Lee.  W3C Team Submission 28 March 2011. URL: http:www.w3.orgTeamSubmissionturtle 

